# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Anthony Scopatz
# This file is distributed under the same license as the xonsh package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xonsh 0.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-30 00:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../tutorial_completers.rst:5
msgid "Tutorial: Programmable Tab-Completion"
msgstr ""

#: ../../tutorial_completers.rst:8
msgid "Overview"
msgstr ""

#: ../../tutorial_completers.rst:10
msgid ""
"As with many other shells, xonsh ships with the ability to complete "
"partially-specified arguments upon hitting the \"tab\" key."
msgstr ""

#: ../../tutorial_completers.rst:13
msgid ""
"In Python-mode, pressing the \"tab\" key will complete based on the "
"variable names in the current builtins, globals, and locals, as well as "
"xonsh language keywords & operators, files & directories, and environment"
" variable names. In subprocess-mode, xonsh additionally completes based "
"on the names of any executable files on your $PATH, alias keys, and full "
"Bash completion for the commands themselves."
msgstr ""

#: ../../tutorial_completers.rst:20
msgid ""
"xonsh also provides a mechanism by which the results of a tab completion "
"can be customized (i.e., new completions can be generated, or a subset of"
" the built-in completions can be ignored)."
msgstr ""

#: ../../tutorial_completers.rst:24
msgid ""
"This page details the internal structure of xonsh's completion system and"
" includes instructions for implementing new tab completion functions."
msgstr ""

#: ../../tutorial_completers.rst:29
msgid "Structure"
msgstr ""

#: ../../tutorial_completers.rst:31
msgid ""
"xonsh's built-in completers live in the ``xonsh.completers`` package, and"
" they are managed through an instance of ``OrderedDict`` "
"(``__xonsh__.completers``) that maps unique identifiers to completion "
"functions."
msgstr ""

#: ../../tutorial_completers.rst:35
msgid ""
"When the \"tab\" key is pressed, xonsh loops over the completion "
"functions in order, calling each one in turn until it reaches one that "
"returns a non-empty set of completion for the current line.  This set is "
"then displayed to the user."
msgstr ""

#: ../../tutorial_completers.rst:42
msgid "Listing Active Completers"
msgstr ""

#: ../../tutorial_completers.rst:44
msgid ""
"A list of the active completers can be viewed by running the ``completer "
"list`` command.  This command will display names and descriptions of the "
"currently-active completers, in the order in which they will be checked."
msgstr ""

#: ../../tutorial_completers.rst:51
msgid "Writing a New Completer"
msgstr ""

#: ../../tutorial_completers.rst:53
msgid "Completers are implemented as Python functions that take five arguments:"
msgstr ""

#: ../../tutorial_completers.rst:55
msgid ""
"``prefix``: the string to be matched (the last whitespace-separated token"
" in the current line)"
msgstr ""

#: ../../tutorial_completers.rst:56
msgid "``line``: a string representing the entire current line"
msgstr ""

#: ../../tutorial_completers.rst:57
msgid "``begidx``: the index at which ``prefix`` starts in ``line``"
msgstr ""

#: ../../tutorial_completers.rst:58
msgid "``endidx``: the index at which ``prefix`` ends in ``line``"
msgstr ""

#: ../../tutorial_completers.rst:59
msgid ""
"``ctx``: the current Python environment, as a dictionary mapping names to"
" values"
msgstr ""

#: ../../tutorial_completers.rst:61
msgid ""
"This function should return a Python set of possible completions for "
"``prefix`` in the current context.  If the completer should not be used "
"in this case, it should return ``None`` or an empty set, which will cause"
" xonsh to move on and try to use the next completer."
msgstr ""

#: ../../tutorial_completers.rst:66
msgid ""
"Occasionally, completers will need to return a match that does not "
"actually start with ``prefix``.  In this case, a completer should instead"
" return a tuple ``(completions, prefixlength)``, where ``completions`` is"
" the set of appropriate completions, and ``prefixlength`` is the number "
"of characters in ``line`` that should be treated as part of the "
"completion."
msgstr ""

#: ../../tutorial_completers.rst:72
msgid ""
"The docstring of a completer should contain a brief description of its "
"functionality, which will be displayed by ``completer list``."
msgstr ""

#: ../../tutorial_completers.rst:75
msgid ""
"Three examples follow.  For more examples, see the source code of the "
"completers xonsh actually uses, in the ``xonsh.completers`` module."
msgstr ""

#: ../../tutorial_completers.rst:103
msgid "Registering a Completer"
msgstr ""

#: ../../tutorial_completers.rst:105
msgid ""
"Once you have created a completion function, you can add it to the list "
"of active completers via the ``completer add`` command::"
msgstr ""

#: ../../tutorial_completers.rst:111
msgid "``NAME`` is a unique name to use in the listing"
msgstr ""

#: ../../tutorial_completers.rst:113
msgid "``FUNC`` is the name of a completer function to use."
msgstr ""

#: ../../tutorial_completers.rst:115
msgid ""
"``POS`` (optional) is a position into the list of completers at which the"
" new completer should be added.  It can be one of the following values:"
msgstr ""

#: ../../tutorial_completers.rst:117
msgid ""
"``\"start\"`` indicates that the completer should be added to the start "
"of the list of completers (it should be run before all others)"
msgstr ""

#: ../../tutorial_completers.rst:118
msgid ""
"``\"end\"`` indicates that the completer should be added to the end of "
"the list of completers (it should be run after all others)"
msgstr ""

#: ../../tutorial_completers.rst:119
msgid ""
"``\">KEY\"``, where ``KEY`` is a pre-existing name, indicates that this "
"should be added after the completer named ``KEY``"
msgstr ""

#: ../../tutorial_completers.rst:120
msgid ""
"``\"<KEY\"``, where ``KEY`` is a pre-existing name, indicates that this "
"should be added before the completer named ``KEY``"
msgstr ""

#: ../../tutorial_completers.rst:122
msgid "If ``POS`` is not provided, it defaults to ``\"start\"``."
msgstr ""

#: ../../tutorial_completers.rst:124
msgid ""
"It is also possible to manipulate ``__xonsh__.completers`` directly, but "
"this is the preferred method."
msgstr ""

#: ../../tutorial_completers.rst:128
msgid "Removing a Completer"
msgstr ""

#: ../../tutorial_completers.rst:130
msgid ""
"To remove a completer from the list of active completers, run ``completer"
" remove NAME``, where ``NAME`` is the unique identifier associated with "
"the completer you wish to remove."
msgstr ""

