# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Anthony Scopatz
# This file is distributed under the same license as the xonsh package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xonsh 0.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-30 00:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../advanced_events.rst:5
msgid "Advanced Events"
msgstr ""

#: ../../advanced_events.rst:7
msgid ""
"If you haven't, go read the `events tutorial <tutorial_events.html>`_ "
"first. This documents the messy details of the event system."
msgstr ""

#: ../../advanced_events.rst:10
msgid "You may also find the `events API reference <api/events.html>`_ useful."
msgstr ""

#: ../../advanced_events.rst:13
msgid "Why Unordered?"
msgstr ""

#: ../../advanced_events.rst:14
msgid ""
"Yes, handler call order is not guaranteed. Please don't file bugs about "
"this."
msgstr ""

#: ../../advanced_events.rst:16
msgid ""
"This was chosen because the order of handler registration is dependant on"
" load order, which is stable in a release but not something generally "
"reasoned about. In addition, xontribs mean that we don't know what "
"handlers could be registered. So even an \"ordered\" event system would "
"be unable to make guarantees about ordering because of the larger system."
msgstr ""

#: ../../advanced_events.rst:21
msgid ""
"Because of this, the event system is not ordered; this is a form of "
"abstraction. Order-dependant semantics are not encouraged by the built-in"
" methods."
msgstr ""

#: ../../advanced_events.rst:25
msgid "So how do I handle results?"
msgstr ""

#: ../../advanced_events.rst:26
msgid ""
"``Event.fire()`` returns a list of the returns from the handlers. You "
"should merge this list in an appropriate way."
msgstr ""

#: ../../advanced_events.rst:30
msgid "What are Species?"
msgstr ""

#: ../../advanced_events.rst:31
msgid ""
"In xonsh, events come in species. Each one may look like an event and "
"quack like an event, but they behave differently."
msgstr ""

#: ../../advanced_events.rst:34
msgid ""
"This was done because load hooks look like events and quack like events, "
"but they have different semantics. See `LoadEvents "
"<api/events.html#xonsh.events.LoadEvent>`_ for details."
msgstr ""

#: ../../advanced_events.rst:37
msgid ""
"In order to turn an event from the default ``Event``, you must "
"transmogrify it, using ``events.transmogrify()``. The class the event is "
"turned in to must be a subclass of ``AbstractEvent``."
msgstr ""

#: ../../advanced_events.rst:40
msgid ""
"(Under the hood, transmogrify creates a new instance and copies the "
"handlers and docstring from the old instance to the new one.)"
msgstr ""

