# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, Anthony Scopatz
# This file is distributed under the same license as the xonsh package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xonsh 0.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-30 00:54+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../python_virtual_environments.rst:7
msgid "Python Virtual Environments"
msgstr ""

#: ../../python_virtual_environments.rst:9
msgid ""
"The usual tools for creating Python virtual environments—``venv``, "
"``virtualenv``, ``pew``—don't play well with xonsh. We won't dig deeper "
"into why it is so, but the general gist is that these tools are hacky and"
" hard-coded for bash, zsh, and other mainstream shells."
msgstr ""

#: ../../python_virtual_environments.rst:11
msgid ""
"Luckily, xonsh ships with its own virtual environments manager called "
"**Vox**."
msgstr ""

#: ../../python_virtual_environments.rst:14
msgid "Vox"
msgstr ""

#: ../../python_virtual_environments.rst:16
msgid "First, load the vox xontrib::"
msgstr ""

#: ../../python_virtual_environments.rst:20
msgid "To create a new environment with vox, run ``vox new <envname>``::"
msgstr ""

#: ../../python_virtual_environments.rst:26
msgid ""
"The interpreter ``vox`` uses to create a virtualenv is configured via the"
" ``$VOX_DEFAULT_INTERPRETER`` environment variable."
msgstr ""

#: ../../python_virtual_environments.rst:28
msgid ""
"You may also set the interpreter used to create the virtual environment "
"by passing it explicitly to ``vox new`` i.e.::"
msgstr ""

#: ../../python_virtual_environments.rst:32
msgid ""
"Under the hood, vox uses Python 3's ``venv`` module to create Python 3 "
"virtualenvs. [this is the default]"
msgstr ""

#: ../../python_virtual_environments.rst:34
msgid ""
"If a Python 2 intrepreter is chosen, it will use the Python 2 "
"interpreter's ``virtualenv`` module."
msgstr ""

#: ../../python_virtual_environments.rst:36
msgid ""
"By default, environments are stored in ``~/.virtualenvs``, but you can "
"override it by setting the ``$VIRTUALENV_HOME`` environment variable."
msgstr ""

#: ../../python_virtual_environments.rst:38
msgid "To see all existing environments, run ``vox list``::"
msgstr ""

#: ../../python_virtual_environments.rst:46
msgid "To activate an environment, run ``vox activate <envname>``::"
msgstr ""

#: ../../python_virtual_environments.rst:51
msgid "Instead of ``activate``, you can call ``workon`` or ``enter``."
msgstr ""

#: ../../python_virtual_environments.rst:53
msgid ""
"If you want to activate an environment which is stored somewhere else "
"(maybe because it was created by another tool) you can pass to ``vox "
"activate`` a path to a virtual environment::"
msgstr ""

#: ../../python_virtual_environments.rst:58
msgid ""
"To exit the currently active environment, run ``vox deactivate`` or ``vox"
" exit``::"
msgstr ""

#: ../../python_virtual_environments.rst:63
msgid "To remove an environment, run ``vox remove <envname>``::"
msgstr ""

#: ../../python_virtual_environments.rst:68
msgid "Instead of ``remove``, you can call ``rm``, ``delete``, or ``del``."
msgstr ""

#: ../../python_virtual_environments.rst:70
msgid ""
"To see all available commands, run ``vox help``, ``vox --help``, or ``vox"
" -h``::"
msgstr ""

#: ../../python_virtual_environments.rst:95
msgid "``virtualenv`` like prompt"
msgstr ""

#: ../../python_virtual_environments.rst:96
msgid ""
"Although it's included in the default prompt, you can customize your "
"prompt to automatically update in the same way as ``virtualenv``."
msgstr ""

#: ../../python_virtual_environments.rst:99
msgid "Simply add the ``'{env_name}'`` variable to your ``$PROMPT``::"
msgstr ""

#: ../../python_virtual_environments.rst:103
msgid ""
"Note that you do **not** need to load the ``vox`` xontrib for this to "
"work. For more details see :ref:`customprompt`."
msgstr ""

